# Generated by Django 4.2.9 on 2024-03-20 22:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=30, null=True)),
                ("authorId", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("url", models.URLField(max_length=1000, unique=True)),
                ("host", models.URLField(max_length=1000, null=True)),
                ("displayName", models.CharField(max_length=30, null=True)),
                ("github", models.URLField(blank=True, max_length=1000, null=True)),
                (
                    "profileImage",
                    models.ImageField(
                        blank=True, null=True, upload_to="static/images/profile_images/"
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Node",
            fields=[
                (
                    "node_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("node_name", models.CharField(blank=True, max_length=100)),
                ("url", models.URLField(default="127.0.0.1:8000/", max_length=1000)),
                (
                    "authors_url",
                    models.URLField(default="127.0.0.1:8000/authors", max_length=1000),
                ),
                ("username", models.CharField(blank=True, max_length=100)),
                ("password", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="RemoteFollow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("follower_inbox", models.URLField()),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="remote_follow",
                        to="mysocial.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("POST", "Post"),
                            ("IMAGE", "Image"),
                            ("COMMONMARK", "Commonmark"),
                        ],
                        default="post",
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=100, null=True)),
                (
                    "postId",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("url", models.URLField(max_length=1000, null=True, unique=True)),
                ("source", models.URLField(max_length=1000, null=True)),
                ("origin", models.URLField(max_length=1000, null=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=2000, null=True),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("POST", "Post"),
                            ("IMAGE", "Image"),
                            ("COMMONMARK", "Commonmark"),
                        ],
                        default="post",
                        max_length=30,
                        null=True,
                    ),
                ),
                ("content", models.TextField(blank=True, max_length=2000, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="static/images/posts_images/"
                    ),
                ),
                ("count", models.IntegerField(default=0)),
                ("likesCount", models.IntegerField(default=0)),
                ("comments", models.URLField(max_length=1000, null=True)),
                ("published", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("PUBLIC", "Public"),
                            ("PRIVATE", "Private"),
                            ("UNLISTED", "Unlisted"),
                        ],
                        default="PUBLIC",
                        max_length=30,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author",
                        to="mysocial.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "context",
                    models.URLField(default="https://www.w3.org/ns/activitystreams"),
                ),
                ("summary", models.CharField(max_length=255)),
                ("type", models.CharField(default="Like", max_length=50)),
                ("object_url", models.URLField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes_given",
                        to="mysocial.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inbox",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("inbox_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("inbox_item", models.JSONField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inbox_items",
                        to="mysocial.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FollowRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(default="Follow", max_length=30)),
                ("summary", models.CharField(max_length=2000, null=True)),
                (
                    "actor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requestfollowing",
                        to="mysocial.author",
                    ),
                ),
                (
                    "object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requestfollowed",
                        to="mysocial.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Follower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to="mysocial.author",
                    ),
                ),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="mysocial.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(default="comment", max_length=30)),
                ("comment", models.TextField(max_length=2000)),
                ("contentType", models.CharField(max_length=30)),
                ("published", models.DateTimeField(auto_now_add=True)),
                (
                    "commentId",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comment_author",
                        to="mysocial.author",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comment_post",
                        to="mysocial.post",
                    ),
                ),
            ],
        ),
    ]
